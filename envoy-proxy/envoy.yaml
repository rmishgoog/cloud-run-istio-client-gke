static_resources:

  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/persons"
                route:
                  host_rewrite_literal: services.example.com
                  cluster: services_gke_io
  clusters:
  - name: services_gke_io
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: services_gke_io
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 10.100.0.12
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: /etc/envoy/pki/example.com.crt
            # match_typed_subject_alt_names:
            # - san_type: DNS
            #   matcher:
            #     exact: services.example.com
          tls_certificates:
          - certificate_chain:
              filename: /etc/envoy/pki/client.example.com.crt
            private_key:
              filename: /etc/envoy/pki/client.example.com.key
